{
	// Place your advent_of_code workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"AOC Day Setup": {
		"scope": "rust",
		"prefix": "aoc",
		"body": [
			"use crate::{file_input, Result};",
			"",
			"pub fn part1() -> Result<String> {",
			"let input = file_input(\"data/2021/day${0:num}_input.txt\")?;",
			"solve_part1(input)",
			"}",
			"",
			"pub fn part2() -> Result<String> {",
			"let input = file_input(\"data/2021/day${0:num}_input.txt\")?;",
			"solve_part2(input)",
			"}",
			"",
			"fn solve_part1<T>(input: T) -> Result<String>",
			"where",
			"T: Iterator<Item = String>,",
			"{",
			"Ok(format!(\"{}\", \"part1\"))",
			"}",
			"",
			"fn solve_part2<T>(input: T) -> Result<String>",
			"where",
			"T: Iterator<Item = String>,",
			"{",
			"Ok(format!(\"{}\", \"part2\"))",
			"}",
			"",
			"#[cfg(test)]",
			"mod tests {",
			"use super::*;",
			"",
			"#[test]",
			"fn test_input_part1() -> Result<()> {",
			"let input = vec![\"part1\"];",
			"let answer = solve_part1(input.iter().map(|line| line.to_string()))?;",
			"",
			"assert_eq!(answer, \"part1\");",
			"",
			"Ok(())",
			"}",
			"",
			"#[test]",
			"fn test_input_part2() -> Result<()> {",
			"let input = vec![\"part2\"];",
			"let answer = solve_part2(input.iter().map(|line| line.to_string()))?;",
			"",
			"assert_eq!(answer, \"part2\");",
			"",
			"Ok(())",
			"}",
			"}",
		],
		"description": "Set up a new AOC day."
	}
}
